<?xml version="1.0"?>
<!-- Generated by NAntBuilder v2.0-->
<project  name="project.hoc.toan.lop.8.automated.build" default="run.all" basedir = "." >
	<description>Builds all Projects</description>
	<!-- property -->
	<property name="base.dir" value="${directory::get-current-directory()}" />
	<property name="log.dir" value=".\project.hoc.toan.lop.8.log" />
	<property name="from.gmail" value="ittrandainghia@gmail.com" />
	<property name="from.gmail.password" value="????" />
	<property name="to.list.mail" value="dainghia0099@yahoo.com.vn,trandainghia07us@gmail.com" />
	<property name="subject" value="build project" />
	<property name="message" value="build logs" />
	<property name="attachment.path" value="" dynamic="true"/>
	
	<tstamp property="build.date.time" pattern="dd-MM-yyyy.HHmm" verbose="true"/>
	
	<property name="build.success.log"
		value="${log.dir}\project.hoc.toan.lop.8.automated.build.success.log-${build.date.time}.txt" dynamic="true" />
	
	<property name="build.failure.log"
		value="${log.dir}\project.hoc.toan.lop.8.automated.build.failure.log-${build.date.time}.txt" dynamic="true" />   
	
	<property name="project.hoc.toan.lop.8.external.test.report.name"
		value="project.hoc.toan.lop.8.external.test.report-${build.date.time}.xml" />
	
	<property name="project.hoc.toan.lop.8.external.test.report"
		value="${log.dir}\${project.hoc.toan.lop.8.external.test.report.name}" />
	
	<property name="project.hoc.toan.lop.8"
		value=".\project.hoc.toan.lop.8" />
	
	<property name="project.hoc.toan.lop.8.build"
		value=".\project.hoc.toan.lop.8.build" />
	
	<property name="solution.name" value="Toan8.sln" />
	
	<property name="solution.path" value="${project.hoc.toan.lop.8.build}\MainMenu\${solution.name}" />
	
	<property name="project.config" value="Debug"/>
	
	<property name="svn.path" value=".\Tools\svn-win32-1.5.5\bin\svn.exe"/>
	
	<property name="source.url" value="https://toan8.googlecode.com/svn/trunk/"/>
	
	<!-- filename đường dẫn đến thư mục chứa các file .exe va .dll test của nunit mà mình đã tạo ra -->
	<property name="filename" value="${project.hoc.toan.lop.8.build}\MyUnitTest\bin\Debug\" />	
	
	<!-- target -->
   
	<target name="run.all" depends="test.unit">
    	<call target="send.mail" />	
    	<call target="sleep" />
    	<echo message = "test.unit is finish"/>
    </target> 
   
	<target name="build.solution" depends="get.source.project, set-framework-configuration">
    	<echo message="${solution.path}" />	
    	
    	<if test="${file::exists(solution.path)}">
    		
    		<exec program="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" commandline="${solution.path} /t:Clean /p:Configuration=${project.config} /v:q" workingdir="." />
    		<exec program="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" commandline="${solution.path} /t:Rebuild /p:Configuration=${project.config} /v:q" workingdir="." />
    		
    		<echo message = "build.solution is finish"/>
			
    	</if>
    </target> 
    <target name="get.source.project" depends="build.init">
    	<if test="${directory::exists(project.hoc.toan.lop.8)}">
    		<exec program="${svn.path}" commandline= "cleanup ${project.hoc.toan.lop.8}"></exec>
    		<exec program="${svn.path}" commandline= "update ${source.url} ${project.hoc.toan.lop.8}"></exec>
    	</if>
    	
    	<ifnot test="${directory::exists(project.hoc.toan.lop.8)}">
    		<mkdir dir="${project.hoc.toan.lop.8}" />	
    		<exec program="${svn.path}" commandline="checkout ${source.url} ${project.hoc.toan.lop.8}"/>
    	</ifnot>
    	
    	<copy todir="${project.hoc.toan.lop.8.build}">
    		<fileset basedir="${project.hoc.toan.lop.8}\6. Source Code\Source_BanFinal">
    			<include name="**/*"/>
    		</fileset>
    	</copy>
    	<echo message = "get.source.project is ok"/>
    </target> 
    <target name="build.init" depends="cleanup">
    	<mkdir dir="${log.dir}" />	
    	
    	<record name="${build.success.log}" level="Info" action="Start" />
    	<record name="${build.failure.log}" level="Verbose" action="Start" />
    	
    	<mkdir dir="${project.hoc.toan.lop.8.build}" />
    	<mkdir dir="${log.dir}" />
    	<echo message = "build.init is ok"/>
    </target> 
    
    <target name="cleanup">
		<delete>
		<fileset basedir="${log.dir}">
			<include name="*.*" />	
		</fileset>
		</delete>
		
		<delete>
			<fileset basedir=".">
				<include name="project.hoc.toan.lop.8.log.zip" />	
			</fileset>
		</delete>
		
		<delete>
			<fileset basedir="${project.hoc.toan.lop.8.build}">
				<include name="**" />	
			</fileset>
		</delete>
		<echo message="cleanup is ok" />	
    </target> 
    
    <target name="sleep">
    	<sleep seconds="15" />
    	<echo message="sleep is ok" />	
    	<call target = "build.all"/>
    </target> 
    
	
    <target name="send.mail">
    	<zip zipfile="project.hoc.toan.lop.8.log.zip">
    		<fileset>
    			<include name="${log.dir}/*" />
    		</fileset>
    	</zip>
    	<property name="attachment.path" value="${base.dir}\project.hoc.toan.lop.8.log.zip"/>
    	<exec program=".\Tools\MyMailSender\MyMailSender\bin\Debug\MyMailSender.exe">
    		<arg value="${from.gmail}" />
    		<arg value="${from.gmail.password}" />
    		<arg value="${to.list.mail}" />
    		<arg value="${subject}" />
    		<arg value="${message}" />
    		<arg value="${attachment.path}" />
    	</exec>	
    	<echo message="send.mail is ok" />
    </target>
    
    <!-- muốn chạy targer test.unit cần phải chạy target build trước -->
    <target name="test.unit" depends="build.solution" description="runs unit tests">
    	<!-- duyệt qua từng file trong thư mục có đường dẫn là giá trị của filename -->
    	<foreach property="filename" item="File">
    		<in>
    			<items>
    				<includes name="${filename}*.dll" />
    			</items>
    		</in>
    		<do>
    			<!-- sử dụng NUnit để chạy các file test -->
    			<exec program=".\Tools\NUnit2.5.5\bin\net-2.0\nunit-console.exe">
    				<arg value="${filename}" />
    				<arg value="/xml:${project.hoc.toan.lop.8.external.test.report}" />
    			</exec>
    		</do>
    	</foreach>
    	<record name="${build.success.log}" action="Close" />
    	<record name="${build.failure.log}" action="Close" />  
    </target>
    <target name="set-framework-configuration">
    	<if test="${not(target::exists('set-'+framework::get-target-framework()+'-framework-configuration'))}">
    		<fail message="The '${framework::get-target-framework()}' framework is not supported by this version of NAnt." />
    	</if>
    	<call target="set-${framework::get-target-framework()}-framework-configuration" />
    </target>
    
    <target name="set-net-3.5-framework-configuration">
    	<property name="nant.settings.currentframework" value="net-3.5" />
    	<property name="current.build.defines" value="${build.defines}NET,NET_1_0,NET_1_1,NET_2_0,NET_3_5,ONLY_NET_3_5" dynamic="true" />
    </target>
    
</project>
